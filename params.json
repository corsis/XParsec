{"tagline":"A stream-type-independent parsec implementation in F# 3.0 - inspired by FParsec, freed from CharStreams and simplified.","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"XParsec","google":"","body":"# Example\r\n\r\n```\r\nopen XParsec.Combinators\r\nopen XParsec.Xml\r\n\r\nlet stream = AE.New [| X.Parse \"<span font='Bold' />\"; X.Parse \"<span s='(' />\" |]\r\nlet reply  = next >. !@\"font\" |-> String.length .> \"font\" @~? \"B\" .>. next .> !@+ \"s\" <| stream\r\n```\r\n\r\n```\r\nval reply : (int * X) Reply = S (4, <span s=\"(\" />)\r\n```\r\n\r\n---\r\n\r\n[![corsis]](https://github.com/corsis/)\r\n\r\n[corsis]: http://portfusion.sourceforge.net/i/l100.png \"Corsis Research\""}