{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"XParsec","body":"# Example\r\n\r\n```\r\nopen XParsec\r\nopen XParsec.Xml\r\n\r\nlet s = AE.New [| E.Parse \"<span font='Bold' />\"; E.Parse \"<span t='(' />\" |]\r\nlet r = next >. !@\"font\"|->String.length .> \"font\"@~?\"B\" .>. next .> !@+\"t\" <| s\r\n```\r\n\r\n```\r\nval r : (int * E) Reply = S (4, <span t=\"(\" />)\r\n```\r\n\r\n# Browse\r\n\r\n+ [Signatures](https://github.com/corsis/XParsec/blob/master/XParsec.fsi)\r\n+ [Implementation](https://github.com/corsis/XParsec/blob/master/XParsec.fs)\r\n\r\n## Contact\r\n\r\n[![corsis]](https://github.com/corsis/)\r\n\r\n[corsis]: http://portfusion.sourceforge.net/i/l100.png \"Corsis Research\"","tagline":"A stream-type-independent parsec implementation in F# 3.0 - inspired by FParsec, freed from CharStreams and simplified."}